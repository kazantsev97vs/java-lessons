
    Внедрение зависимостей (Dependency Injection, DI)

        Способы внедрения зависимостей:

            - через конструктор

            - через setter

            - Можем внедрять ссылки или простые значения
            - Можем внедрять значения из внешнего файла

            - Есть множество конфигруаций того, как внедрять
                (scope, init-method, destroy-method, factory method и т.д.)

            - Можно внедрять через XML, аннотации или Java-код

            - Процесс внедрения можно автоматизировать (Autowiring)

        scope - задает то, как Spring будет задавать ваши бины

        Singleton - scope, который используется по умолчанию,
                    (при всех вызовах getBean() возвращается ссылка на один и тот же единственный объект)
                    чаще всего используется тогда, когда у нашего бина нет изменяемых состояний (stateless),
                    scope="singleton"

        Prototype - scope, который каждый раз создает новый объект при вызове getBean(),
                    чаще всего используется тогда, когда у нашего бина есть изменяемые состояния (stateful),
                    scope="prototype"

        Request         - scope, который
        Session         - scope, который
        Global-session  - scope, который