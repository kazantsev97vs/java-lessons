
    Жизненный цикл бина (Bean Lifecycle)
                    1                              2                             3
        +-----------------------+      +-----------------------+      +-----------------------+
        |   Вы запускаете       |      |   Запускаете          |      |   Создается объект    |
        |   Spring приложение   |----> |   Spring контейнер    |----->|   бина                |---->
        |                       |      |                       |      |                       |
        +-----------------------+      +-----------------------+      +-----------------------+

                    4                     5 (@PostConstruct)                             6
        +-----------------------+      +-----------------------+      +-----------------------+
        |   В бин внедряются    |      |   Вызывается          |      |   Бин готов к         |
   ---->|   зависимости         |----> |   указанный           |----->|   использованию       |---->
        |   (DI)                |      |   init-method         |      |                       |
        +-----------------------+      +-----------------------+      +-----------------------+

                    7                       8 (@PreDestroy)                            9
        +-----------------------+      +-----------------------+      +-----------------------+
        |                       |      |   Вызывается          |      |   Остановка           |
   ---->|   использование бина  |----> |   указанный           |----->|   Spring приложения   |
        |                       |      |   destroy-method      |      |   context.close()     |
        +-----------------------+      +-----------------------+      +-----------------------+

    init-method - метод, который запускается в ходе инициализации бина
                  например, инициализация ресурсов, обращение к внешним файлам, запуск БД

    destroy-method - метод, который запускается в ходе уничтожения бина (при завершении приложения)
                     например, очищение ресурсов, закрытие потоков ввода-вывода, закрытие доступа к БД

    У этих методов:

        -- МОДИФИКАТОР ДОСТУПА - может быть любой

        -- ТИП ВОЗВРАЩАЕМОГО ЗНАЧЕНИЯ - мб любой, но чаще всего void т.к. нет возможности получить возвращаемое значение

        -- НАЗВАНИЕ МЕТОДА - мб любым

        -- АРГУМЕНТЫ МЕТОДА - ИХ НЕТ!

    ДЛЯ БИНОВ СО SCOPE "SINGLETON":
        1) Один раз вызывается init-method для всех вызовов getBean()
        2) Один раз вызывается destroy-method при вызове context.close()

    ДЛЯ БИНОВ СО SCOPE "PROTOTYPE":
        1) Каждый раз вызывается init-method для каждого вызова getBean()
        2) SPRING НЕ ВЫЗЫВАЕТ destroy-method при вызове context.close()

    Если объекты класса создаются ФАБРИЧНЫМ МЕТОДОМ, то можно определить factory-method в бине
    и тогда Spring будет знать, что нужно создавать объект класса не с помощью new,
    а просто вызвав фабричный метод